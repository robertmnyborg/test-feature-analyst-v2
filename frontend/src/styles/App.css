/**
 * Feature Analyst V2 - App Component Styles
 * Brand-compliant styles following CLAUDE.md specifications
 */

/* Responsive Design - Mobile-first approach */
@media (max-width: 1024px) {
  .unit-comparison-content {
    grid-template-columns: 1fr !important;
  }

  .app-header-content {
    flex-direction: column;
    align-items: flex-start !important;
    gap: 10px;
  }
}

@media (max-width: 768px) {
  .app-header {
    padding: 15px 20px !important;
  }

  .app-main {
    padding: 20px 15px !important;
  }

  .unit-comparison-content {
    gap: 15px !important;
  }
}

/* Component-specific overrides */
.card {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.card:hover {
  transform: translateY(-2px);
}

/* Table responsive behavior */
@media (max-width: 768px) {
  table {
    font-size: 12px !important;
  }

  th, td {
    padding: 8px 10px !important;
  }
}

/* Print styles */
@media print {
  .photo-viewer,
  .export-controls {
    display: none;
  }

  .app-header,
  .app-footer {
    page-break-after: avoid;
  }

  table {
    page-break-inside: avoid;
  }
}

/* Accessibility - Focus visible styles */
button:focus-visible,
input:focus-visible,
select:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
}

/* Loading skeleton (for future enhancement) */
.skeleton {
  background: linear-gradient(
    90deg,
    var(--color-bg-light) 0%,
    var(--color-border) 50%,
    var(--color-bg-light) 100%
  );
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s ease-in-out infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Utility classes */
.text-teal {
  color: var(--color-accent);
}

.bg-teal-light {
  background-color: var(--color-teal-bg-light);
}

.shadow-card {
  box-shadow: var(--shadow-card);
}

.shadow-hover {
  box-shadow: var(--shadow-hover);
}

.rounded-card {
  border-radius: var(--radius-card);
}

.rounded-button {
  border-radius: var(--radius-button);
}

.rounded-input {
  border-radius: var(--radius-input);
}
